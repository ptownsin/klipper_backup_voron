# Noice
# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Probe pin								[probe] section
## Fine tune E steps					[extruder] section

[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
canbus_uuid: 8cb76305b098
# serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1D0011000C50304E35313720-if00
#restart_method: command
##--------------------------------------------------------------------

[mcu EBBCan]
canbus_uuid: 3f33462eff42

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3200
max_z_velocity: 30 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
position_endstop: 295
position_max: 295
homing_speed: 50   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.6
#hold_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 999999

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 50  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.6
#hold_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 999999
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 256
# TAP endstop_pin: PG10
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# preTAP # position_endstop: 5.05
position_max: 290
position_min: -4
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3
homing_retract_speed: 20

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.6
#hold_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 999999

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 256

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.6
#hold_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 999999

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 256

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.6
#hold_current: 0.80
sense_resistor: 0.110
#stealthchop_threshold: 999999

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 256

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.6
#hold_current: 0.80
sense_resistor: 0.110
#stealthchop_threshold: 999999


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR6
[extruder]
max_extrude_only_distance: 100.0
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
rotation_distance: 21.7
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 16
#full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.600
filament_diameter: 1.75
heater_pin: EBBCan: PB13
#heater_pin: PA2
sensor_type: MAX31865
sensor_pin: EBBCan: PA4
#sensor_pin: PF8
spi_bus: spi1
rtd_use_50Hz_filter: True

min_temp: 1
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
pressure_advance: 0.02
pressure_advance_smooth_time: 0.02

##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: EBBCan: PA15
#uart_pin: PE1
interpolate: false
run_current: 0.5
#hold_current: 0.4
sense_resistor: 0.110
#stealthchop_threshold: 999999


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
heater_pin: PA3 
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.7
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[probe]
pin: !EBBCan:PB9
x_offset: 0
y_offset: 0 #preTAP 25.0
z_offset = -0.9
speed: 10.0
lift_speed: 20
samples: 1
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.06 #0.006
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    

#####################################################################
# 	Sensors
# #####################################################################
# [temperature_sensor mcu_temp]
#     sensor_type: temperature_mcu
#     min_temp: 0
#     max_temp: 100
#####################################################################
# 	Fan Control
#####################################################################

# [fan]
# ##	Print Cooling Fan - CNC_FAN0
# pin: PA8
# kick_start_time: 0.5
# ##	Depending on your fan, you may need to increase this value
# ##	if your fan will not start. Can change cycle_time (increase)
# ##	if your fan is not able to slow down effectively
# off_below: 0.10
[fan]
pin: EBBCan: PA0

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: EBBCan: PA1
#pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1

[heater_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

#[heater_fan exhaust_fan]
##	Exhaust fan - CNC_FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 1.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[output_pin lights]
pin: PD13

[controller_fan  skirt_fans]
pin: PD14
max_power: 1
off_below: 0.1
fan_speed: 0.3
idle_timeout: 5
stepper: stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2, stepper_z3

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
# preTAP home_xy_position:202,300
home_xy_position: 150,150
speed:100
z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions
gantry_corners:
	-60,-10
	360,370
points:
	50,25
	50,225
	250,225
	250,25
speed: 300
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.02 # 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[display_status]

#####################################################################
# 	Input Shaper
#####################################################################
# [mcu rpi]
# serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None
[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20  # an example

[input_shaper]
shaper_freq_x: 33.0
shaper_type_x: mzv
#shaper_freq_x: 59.4
#shaper_type_x: mzv
shaper_freq_y: 39.0
shaper_type_y: mzv
#shaper_freq_y: 41.6
#shaper_type_y: mzv

#####################################################################
# 	Bed Mesh
#####################################################################
[bed_mesh]
speed: 300
horizontal_move_z: 2
mesh_min: 20, 20
mesh_max: 280,280
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
#relative_reference_index: 12
zero_reference_position: 150, 150


#######################################
#### Enclosure Temp Sensor Section ####
# #######################################
[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950


# [temperature_sensor enclosure_temp]
# sensor_type: Generic 3950
# sensor_pin: PF5
# min_temp: 0
# max_temp: 100
# gcode_id: C

[temperature_sensor pi_temp]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor EBB]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

[temperature_sensor Octopus]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#####################################################################
# 	Runout sensor
#####################################################################

[filament_motion_sensor btt_smartie]
extruder: extruder
switch_pin: PG12
runout_gcode: FILAMENT_RUNOUT

[pause_resume]

[gcode_macro FILAMENT_RUNOUT]
gcode:
    M600

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-10 F1000
    RESTORE_GCODE_STATE NAME=M600_state


#####################################################################
# 	Macros
#####################################################################
[gcode_macro CURRENT_Z]
description: Set the Z axis motors current
gcode:
    {% set AMPS = params.AMPS|default(0.8)|float %}
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={AMPS}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={AMPS}
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={AMPS}
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={AMPS}

[gcode_macro CURRENT_AB]
description: Set the A and B axis motor current
gcode:
    {% set AMPS = params.AMPS|default(0.8)|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={AMPS}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={AMPS}

[gcode_macro CG28]
description: Set the A and B axis motor current
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
        G0 Z15
    {% endif %}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    CQGL
	#G0 X150 Y150 Z30 F3600
    
    G1 X0.1 Y20 Z20 F5000.0

[gcode_macro CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        QUAD_GANTRY_LEVEL
        clean_nozzle
        G28 Z
        G0 Z15
    {% endif %}
   
[gcode_macro START_PRINT]
#   Use PRINT_ST for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

    M104 S150 ; start warming extruder, don't wait
    M190 S{BED_TEMP} ; Wait for bed

    G90 ; Absolute coords
    G32                            ; home all axes

    G92 E0 ; Reset Extruder
    M104 S{EXTRUDER_TEMP} ; Start extruder heating, don't wait
    
    G1 Z10.0 F3000 ; move z up a little
    G1 X0.1 Y20 F5000.0 ; move to start-line position	

    M109 S{EXTRUDER_TEMP} ; Wait for Extruder temperature

    G1 Z0.3 F1000.0 ; Move down
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; draw 1st line
    G1 X0.4 Y200.0 Z0.3 F5000.0 ; move to side a little
    G1 X0.4 Y40 Z0.3 F1500.0 E30 ; draw 2nd line
    G92 E0 ; reset extruder
    G1 Z2.0 F3000 ; move z up little to prevent scratching of surface

[gcode_macro END_PRINT]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z20 F3000                   ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X150 Y295 F3600            ; park nozzle at rear
    #BED_MESH_CLEAR
    M18                            ; disable steppers

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  END_PRINT
  CANCEL_PRINT_BASE

[gcode_macro test_speed_fast]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X10 Y10     F27000
        G1 X290 Y290 F27000
        G1 X10 Y10     F27000
        G1 X290 Y290 F27000

        G1 X10 Y290 F36000

        G1 X290 Y10 F27000
        G1 X10 Y290 F27000
        G1 X290 Y10 F27000
        G1 X10 Y290 F27000

        G1 X10 Y10 F36000
        G1 X290 Y10 F36000
        G1 X290 Y290 F36000
        G1 X10 Y290 F36000
        G1 X10 Y10 F36000
        G28 X0 Y0
        GET_POSITION

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}


[gcode_macro clean_nozzle]
gcode:
    {% set wipe_count = 8 %}
    CG28
    SAVE_GCODE_STATE NAME=clean_nozzle_state
    G90
    G0 Z15 F300
    {% for wipe in range(wipe_count) %}
        {% for coordinate in [(87, 300),(55, 300)] %}
            G0 X{coordinate[0]} Y{coordinate[1] - 0.25 * wipe} Z2.5 F12000
        {% endfor %}
    {% endfor %}
    G0 Z15
    RESTORE_GCODE_STATE NAME=clean_nozzle_state

[include timelapse.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.012
#*# pid_ki = 0.620
#*# pid_kd = 116.742
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.087500, -0.007500, -0.012500, -0.035000, -0.112500
#*# 	  0.000000, 0.020000, 0.022500, 0.000000, -0.060000
#*# 	  -0.017500, 0.002500, 0.000000, -0.012500, -0.067500
#*# 	  -0.065000, -0.057500, -0.055000, -0.072500, -0.125000
#*# 	  -0.132500, -0.137500, -0.145000, -0.152500, -0.225000
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 5
#*# max_y = 280.0
#*# mesh_x_pps = 2
#*# max_x = 280.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 46.012
#*# pid_ki = 3.007
#*# pid_kd = 175.996
